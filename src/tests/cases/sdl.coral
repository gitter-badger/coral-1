`extern func SDL_Init:Int32 (flags: Int32)
`extern func SDL_Delay:Void (flags: Int32)
`extern func SDL_WaitEvent:Int32 (flags: Int32)
`extern func SDL_PollEvent:Int32 (event: Ptr)
`extern func SDL_CreateWindow: Ptr(title:Ptr, x:Int32, y:Int32, w:Int32, h:Int32, f:Int32)
`extern func SDL_GL_CreateContext: Ptr (window: Ptr)
`extern func SDL_GL_GetAttribute: Int32(flag: Int32, addr: Ptr[Int8])
`extern func SDL_GetError: Ptr ()
`extern func malloc:Ptr (size: Int32)
`extern func free:Void (ptr:Ptr)

func wait_sdl_key ():
  let event = malloc(200)
  while SDL_PollEvent(event) = 0: 0
  let type = derefi event
  let key = derefi(event + 16)
  if type = 256:
    printf("[%5d] type: %x\n", derefi(event + 4), type)
    free event
    0
  else if type = 768:
    printf("[%5d] key: %x\n", derefi(event + 4), key)
    free(event)
    if key = 20: 1
    else if key = 41: 1
    else: wait_sdl_key()
  else:
    printf("[%5d] type: %x\n", derefi(event + 4), type)
    free(event)
    wait_sdl_key()

func main ():
  if SDL_Init 0 >= 0:
    let window = SDL_CreateWindow("Hello SDL", 100, 100, 600, 400, 0)
    let gl = SDL_GL_CreateContext(window)
    let v1 = 1
    let v2 = 1
    SDL_GL_GetAttribute(17, addrof v1)
    SDL_GL_GetAttribute(18, addrof v2)
    printf("OpenGL Version %d.%d\n", v1, v2)
    printf("OpenGL Context Address %p\n", gl)
    # wait_sdl_key()
  0