open gmp.bigint

let acc, num, den, t1, t2 = map bigint (0, 1, 1, 0, 0)

func extract(n):
  t1 =* (num, n)
  t2 =+ (t1, acc)
  t1 =/ (t2, den)
  int32 t1
    
func next(k):
  acc.addmul(num, 2)
  acc *= 2 * k + 1
  den *= 2 * k + 1
  num *= k

func eliminate(d):
  acc.submul(den, d)
  acc *= 10
  num *= 10

func pi():
  for k in range(1):
  next(k)
  if num <= acc:
  d3 = extract 3
  if d3 == extract 4:
  yield d3
  eliminate d3

let n = argv[0]
for i, d in pi().take(n).indexed:
  printf<"%d"> d
  if i = n - 1: printf<"%s">(" " * (-i % 10))
  if i % 10 = 9: printf<"\t:%d\n"> i
