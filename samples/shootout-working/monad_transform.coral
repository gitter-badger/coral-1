type Iterator:
  func Let(input, body): ()
  func For(input, body): ()
  func Yield(input, cont): ()

func foo(n):
  let M = Iterator.new()
  M.Let(n * n,
    m => M.let(range(m),
      k => M.For(k,
        i => "foo " + str (i * 2)))

func foo(n):
  let m = n * n
  let k = range(m)
  for i in range(m):
    yield "foo " + str (i * 2)


func bar(n):
  yield 1
  yield n

M.Yield(1, () => M.Yield(n, () => M.Return()))

func foo1(n):
  let n = 3:
    yield n
  let n = 4:
    yield n

let M0 = Iterator.new()
