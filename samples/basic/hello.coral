extern "C" strlen : Fn[Ptr[Int8], Int32]
extern "C" fizzbuzz : Fn[Int32, Ptr[Int8]]
extern "C" printf : Fn[..., Void]

func main():
  printf("%d\n", strlen "hi")
  printf "hello\n"

# extern "C" ByteString_create: Fn[Ptr[Int8], Int32, Ptr[Int8]]
# extern "C" ByteString_unsafe_cstr: Fn[Ptr[Int8], Ptr[Int8]]
# extern "C" ByteString_len: Fn[Ptr[Int8], Ptr[Int8]]

# type List:
#   | Nil
#   | Cons

# func show : Void (x: List):
#   match x:
#     Nil: printf ""
#     Cons: printf "Cons"

# func main : Void ():
#   let w : Ptr[Int8] = "World"
#   let s : Int32 = strlen w
#   printf ("Hello, %s\n", w)
#   printf ("%s.len = %d\n", w, s)
#   printf ("FizzBuzz:\n%s\n", fizzbuzz 20)
#   let bs : Ptr[Int8] = ByteString_create("foobar barbar", 8)
#   printf("(%d) [%s]\n", ByteString_len bs, ByteString_unsafe_cstr bs)
