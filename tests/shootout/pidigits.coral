import gmp.bigint

let (acc, num, den, t1, t2) = (0, 1, 1, 0, 0).map bigint

func extract(n):
  t1 = num * n
  t2 = t1 + acc
  t1 = t2 / den
  int32 t1

func next(k):
  addmul(acc, num, 2)
  acc *= 2 * k + 1
  den *= 2 * k + 1
  num *= k

func eliminate(d):
  submul(acc, den, d)
  acc *= 10
  num *= 10

func pi():
  for k in range(1, inf):
    next(k)
    if num <= acc:
      d3 = extract 3
      if d3 = extract 4:
        yield d3
        eliminate d3

let n = int32 argv[0]
let digits = array(pi().take(n))
for i in range(-(-n/10*10)):
  if i < n:
    print digits[i]
  else:
    print " "
  if i % 10 = 9:
    printf("\t: %d\n", min(i, n))