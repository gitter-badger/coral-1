let alu = (
 "GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG" +
 "GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA" +
 "CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT" +
 "ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA" +
 "GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG" +
 "AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC" +
 "AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA")

let iub = [
  ("a", 0.27), ("c", 0.12), ("g", 0.12), ("t", 0.27), ("B", 0.02),
  ("D", 0.02), ("H", 0.02), ("K", 0.02), ("M", 0.02), ("N", 0.02),
  ("R", 0.02), ("S", 0.02), ("V", 0.02), ("W", 0.02), ("Y", 0.02)]

let sapiens = [
  ('a', 0.3029549426680), ('c', 0.1979883004921),
  ('g', 0.1975473066391), ('t', 0.3015094502008)]

let col = 0
func putc(c):
  set col += 1
  match col % 60:
    zero: printf "\n%c" c
    n: printf "%c" c

func get_char(table, r):
  for c, p in table:
    if r < p: return c

func repeatFasta(header, n, seq):
  print header
  let l = len seq
  for i in range(n):
    putc $ (get_char @ table) $ seq[i % l]

func randomFasta(header, n, probs):
  func nextRand(s): ((s * 3877 + 20573) % 139968, float s / 139968.0f)
  let rand = iter (unfold 43439i nextRand)
  let table = reduce ((s, (a, c)) => ((a, s + c), s + c), 0, probs)
  print header
  for i in range(n):
    putc $ (get_char @ table) $ next rand

let n = int32 args[0]
repeatFasta(">ONE Homo sapiens alu", 2 * n, alu)
randomFasta(">TWO IUB ambiguity codes", 3 * n, iub)
randomFasta(">THREE Homo sapiens frequency", 5 * n, sapiens)
